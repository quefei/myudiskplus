####
auth --enableshadow --passalgo=sha512


####
harddrive --partition=sdb1 --dir=/
text

######custom######
network --bootproto=static --onboot=on --ip=192.168.1.5 --netmask=255.255.255.0 --gateway=192.168.1.1 --nameserver=114.114.114.114
network --hostname=quenong


####
timezone Asia/Shanghai --isUtc --nontp
keyboard --vckeymap=us --xlayouts='us' --switch='grp:ctrl_shift_toggle'
lang en_US.UTF-8 --addsupport=zh_CN.UTF-8


####
rootpw --iscrypted $6$voVz0lpw$i1anVDeJYoAzp2BwynwTCdgaUr3Kp/P4G4.umZGYv4Xwzy4N8/gvIDthZqk89NmbLHNUCKLpFepYRpu4yhI9Y1
user --groups=wheel --name=admin --password=$6$voVz0lpw$i1anVDeJYoAzp2BwynwTCdgaUr3Kp/P4G4.umZGYv4Xwzy4N8/gvIDthZqk89NmbLHNUCKLpFepYRpu4yhI9Y1 --iscrypted --gecos="admin"


####
services --disabled="chronyd"

firstboot --disable
selinux --disabled
firewall --enabled


####
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
clearpart --all --initlabel --drives=sda

part        biosboot      --fstype="biosboot"    --ondisk=sda     --size=2
part        /boot         --fstype="xfs"         --ondisk=sda     --size=1024
part        pv.100        --fstype="lvmpv"       --ondisk=sda     --grow

volgroup    cl            --pesize=4096          pv.100
logvol      swap          --fstype="swap"        --size=2048      --name=swap         --vgname=cl

# 500G, 100g 50g 50g 262.75g
logvol      /             --fstype="xfs"         --size=102400    --name=root         --vgname=cl
logvol      /var          --fstype="xfs"         --size=51200     --name=var          --vgname=cl
logvol      /home         --fstype="xfs"         --size=51200     --name=home         --vgname=cl
logvol      /usr/local    --fstype="xfs"         --size=269057    --name=usr_local    --vgname=cl


####
poweroff


####
%packages
@^minimal
@core
kexec-tools
%end


####
%pre
%end

%post
####
quenong_rules()
{
local UDISK_VID="$1"
local UDISK_PID="$2"
local UDISK_SN="$3"

if [[ -z "$UDISK_VID" ]] || [[ -z "$UDISK_PID" ]] || [[ -z "$UDISK_SN" ]]; then
        continue 1
fi

cat >> /etc/udev/rules.d/51-quenong.rules <<-EOF
KERNEL=="sd*", ATTRS{idVendor}=="${UDISK_VID}", ATTRS{idProduct}=="${UDISK_PID}", ATTRS{serial}=="${UDISK_SN}", SYMLINK+="myudisk%n"
ACTION=="add", KERNEL=="sd?1", ATTRS{idVendor}=="${UDISK_VID}", ATTRS{idProduct}=="${UDISK_PID}", ATTRS{serial}=="${UDISK_SN}", RUN+="mymount"
ACTION=="remove", ENV{DEVNAME}=="/dev/sd?1", ENV{ID_VENDOR_ID}=="${UDISK_VID}", ENV{ID_MODEL_ID}=="${UDISK_PID}", ENV{ID_SERIAL_SHORT}=="${UDISK_SN}", RUN+="myumount"

EOF
}


####
mount_device()
{
local MOUNT_DIRECTORY="$1"
local MOUNT_DEVICE="$2"
local MOUNT_DIR=
local UNIT_NAME=

MOUNT_DIRECTORY=$(echo "$MOUNT_DIRECTORY" | sed "s/^\///g" | sed "s/\/$//g")

MOUNT_DIR="/${MOUNT_DIRECTORY}"
UNIT_NAME=$(echo "$MOUNT_DIRECTORY" | sed "s/\//\-/g")

if [[ -z "$MOUNT_DIR" ]] || [[ -z "$MOUNT_DEVICE" ]] || [[ -z "$UNIT_NAME" ]]; then
        continue 1
fi

cat > /etc/systemd/system/${UNIT_NAME}.mount <<-EOF
[Unit]
Description=${UNIT_NAME} directory

[Mount]
What=${MOUNT_DEVICE}
Where=${MOUNT_DIR}
Type=xfs

[Install]
WantedBy=multi-user.target
EOF

cat > /etc/systemd/system/${UNIT_NAME}.automount <<-EOF
[Unit]
Description=${UNIT_NAME} directory

[Automount]
Where=${MOUNT_DIR}

[Install]
WantedBy=multi-user.target
EOF
}


######custom######
UDISK_VID="0951"
UDISK_PID="1666"
UDISK_SN="102618525DD4F070C8744960"

MOUNT_DIR="/backup"
MOUNT_DEVICE="/dev/el/backup"

ROOT_PASSWORD='123456'
ADMIN_PASSWORD='123456'


######custom######
quenong_rules "$UDISK_VID" "$UDISK_PID" "$UDISK_SN"

mount_device "$MOUNT_DIR" "$MOUNT_DEVICE"


####
cat > /usr/lib/udev/mymount <<-"EOF"
#!/bin/bash

MYUDISK_TYPE="vfat"
MYUDISK_LABEL1="QUENONG$(date +"%Y")"
MYUDISK_LABEL2="QUENONG$(date +"%m%d")"

if [[ "$MYUDISK_TYPE" == "$ID_FS_TYPE" ]]; then
        if [[ "$MYUDISK_LABEL1" == "$ID_FS_LABEL" ]] || [[ "$MYUDISK_LABEL2" == "$ID_FS_LABEL" ]]; then
                
                mkdir -p /mnt/${ID_FS_LABEL}
                mount -t ${ID_FS_TYPE} ${DEVNAME} /mnt/${ID_FS_LABEL}
                
                . /usr/lib/udev/myexec
                
        fi
fi
EOF


####
cat > /usr/lib/udev/myumount <<-"EOF"
#!/bin/bash

MYUDISK_LABEL1="QUENONG$(date +"%Y")"
MYUDISK_LABEL2="QUENONG$(date +"%m%d")"
MYUDISK_LABEL3="QUENONG$(date +"%m%d" -d "-1day")"
MYUDISK_LABEL4="QUENONG$(date +"%m%d" -d "-2day")"
MYUDISK_LABEL5="QUENONG$(date +"%m%d" -d "-3day")"
MYUDISK_LABEL6="QUENONG$(date +"%m%d" -d "-4day")"
MYUDISK_LABEL7="QUENONG$(date +"%m%d" -d "-5day")"
MYUDISK_LABEL8="QUENONG$(date +"%m%d" -d "-6day")"
MYUDISK_LABEL9="QUENONG$(date +"%m%d" -d "-7day")"

MYUDISK_LABEL_LIST="${MYUDISK_LABEL1} ${MYUDISK_LABEL2} ${MYUDISK_LABEL3} ${MYUDISK_LABEL4} ${MYUDISK_LABEL5}
                    ${MYUDISK_LABEL6} ${MYUDISK_LABEL7} ${MYUDISK_LABEL8} ${MYUDISK_LABEL9}"

for MYUDISK_LABEL_NUM in ${MYUDISK_LABEL_LIST}; do
        if [[ "$MYUDISK_LABEL_NUM" == "$ID_FS_LABEL" ]]; then
                
                umount -l /mnt/${ID_FS_LABEL}
                rm -rf /mnt/${ID_FS_LABEL}
                break 1
                
        fi
done
EOF


####
cat > /usr/lib/udev/myexec <<-"EOF"
#!/bin/bash

export MYUDISK_TYPE="$ID_FS_TYPE"
export MYUDISK_LABEL="$ID_FS_LABEL"
export MYUDISK_DEVNAME="$DEVNAME"

if [[ -z "$(rpm -qa at)" ]] && [[ -s "/mnt/${ID_FS_LABEL}/auto-install/at-3.1.13-22.el7.x86_64.rpm" ]]; then
        rpm -ivh /mnt/${ID_FS_LABEL}/auto-install/at-3.1.13-22.el7.x86_64.rpm
fi

if [[ -n "$(rpm -qa at)" ]]; then
        systemctl restart atd
        systemctl enable  atd
        
        at now -f /usr/local/bin/.myexec_shell
else
        exit 1
fi
EOF


####
cat > /usr/local/bin/.myexec_variable <<-"EOF"
EXECUTIONS=1
EOF


####
cat > /usr/local/bin/.myexec_shell <<-"EOFS"
#!/bin/bash

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/bin
export TERM=xterm
export SHELL=/bin/bash

ADJUST_TIME="0"
WAIT_TIME="3"
EXECUTE_MYSH="0"
EXECUTE_ONCESH="0"

QUENONG_ROOT="/mnt/.quenong"
QUENONG_CONF_DIR="${QUENONG_ROOT}/conf"
QUENONG_SHELL_DIR="${QUENONG_ROOT}/shell"
QUENONG_LOG_DIR="${QUENONG_ROOT}/log"
QUENONG_DIR="$QUENONG_SHELL_DIR"

exec_time()
{
        EXEC_TIME=$(date +"%Y%m%d%H%M%S")
        EXEC_TIMES=$(date +"%Y-%m-%d %H:%M:%S")
        
        QUENONG_LOG="${QUENONG_LOG_DIR}/my.log.${EXEC_TIME}"
}

myudisk_init()
{
        MYUDISK_ROOT="/mnt/${MYUDISK_LABEL}"
        MYUDISK_MY_DIR="${MYUDISK_ROOT}/my"
        MYUDISK_CONF_DIR="${MYUDISK_MY_DIR}/conf"
        MYUDISK_SHELL_DIR="${MYUDISK_MY_DIR}/shell"
        MYUDISK_LOG_DIR="${MYUDISK_MY_DIR}/log"
        MYUDISK_BAK_DIR="${MYUDISK_MY_DIR}/bak"
        
        mkdir -p {"$MYUDISK_CONF_DIR","$MYUDISK_SHELL_DIR","$MYUDISK_LOG_DIR"}
        touch ${MYUDISK_SHELL_DIR}/once.sh
}

exec_result()
{
cat > ${QUENONG_LOG_DIR}/my.log <<-EOF
Executions: ${1}
Time:       ${2}
Result:     ${3}
EOF
}

export_var()
{
        READ_FILE="/mnt/${MYUDISK_LABEL}/my/conf/my.conf"
        
        if [[ -s "$READ_FILE" ]]; then
                while read LINE; do
                        if ( echo "$LINE" | grep "^${1}$" &> /dev/null ); then
                                export "$LINE"
                        fi
                done < ${READ_FILE}
        fi
}

export_var "ADJUST_TIME=[0-1]"

if [[ "$ADJUST_TIME" == "1" ]] && [[ -s "/usr/local/bin/myfunction.sh" ]]; then
        . /usr/local/bin/myfunction.sh
        adjust_time
        hwclock -w
        sed -i "s/^ADJUST_TIME=1$/ADJUST_TIME=0/g" ${READ_FILE}
fi

if [[ -d "$QUENONG_LOG_DIR" ]]; then
        myudisk_init
        /usr/bin/cp -af ${QUENONG_LOG_DIR} ${MYUDISK_MY_DIR}
fi

export_var "WAIT_TIME=[0-9][0-9]*"

WAIT_MAX=$(( WAIT_TIME * 20 ))

for (( NUM=0; NUM < WAIT_MAX; NUM++ )); do
        sleep 3
        
        if [[ ! -L "/dev/myudisk" ]]; then
                exit 1
        fi
done

if [[ -s "/usr/local/bin/.myexec_variable" ]]; then
        . /usr/local/bin/.myexec_variable
        
        QUENONG_EXEC="$EXECUTIONS"
        EXECUTIONS_PLUS=$(( EXECUTIONS + 1 ))
        
        sed -i "s/^EXECUTIONS=[0-9][0-9]*$/EXECUTIONS=${EXECUTIONS_PLUS}/g" /usr/local/bin/.myexec_variable
else
        exit 1
fi

myudisk_init

if [[ -d "$QUENONG_ROOT" ]]; then
        rm -rf ${QUENONG_ROOT}
fi

mkdir -p {"$QUENONG_CONF_DIR","$QUENONG_SHELL_DIR","$QUENONG_LOG_DIR"}

/usr/bin/cp -af {"$MYUDISK_CONF_DIR","$MYUDISK_SHELL_DIR"} ${QUENONG_ROOT}

exec_time

if [[ -s "${MYUDISK_SHELL_DIR}/once.sh" ]]; then
        mkdir -p ${MYUDISK_BAK_DIR}/once.sh.bak.${EXEC_TIME}
        mv ${MYUDISK_SHELL_DIR}/* ${MYUDISK_BAK_DIR}/once.sh.bak.${EXEC_TIME}
fi

export QUENONG_DIR
export QUENONG_LOG
export QUENONG_EXEC

if [[ -s "${QUENONG_SHELL_DIR}/.my.sh" ]]; then
        cd ${QUENONG_SHELL_DIR}
        bash .my.sh && exec_result "$EXECUTIONS" "$EXEC_TIMES" "Success" || exec_result "$EXECUTIONS" "$EXEC_TIMES" "Failed"
        cd /mnt
fi

if [[ -s "${QUENONG_SHELL_DIR}/once.sh" ]]; then
        cd ${QUENONG_SHELL_DIR}
        bash once.sh && exec_result "$EXECUTIONS" "$EXEC_TIMES" "Success" || exec_result "$EXECUTIONS" "$EXEC_TIMES" "Failed"
        cd /mnt
fi

wait

if [[ -d "$QUENONG_LOG_DIR" ]] && [[ -L "/dev/myudisk" ]]; then
        myudisk_init
        /usr/bin/cp -af ${QUENONG_LOG_DIR} ${MYUDISK_MY_DIR}
fi
EOFS


####
chmod 755 /usr/lib/udev/{"mymount","myumount","myexec"}
chmod 755 /usr/local/bin/.myexec_shell


####
/usr/bin/cp -af /usr/lib/systemd/system/systemd-udevd.service /etc/systemd/system/systemd-udevd.service
sed -i "s/^MountFlags=slave$/MountFlags=shared/g" /etc/systemd/system/systemd-udevd.service


####
echo "${ROOT_PASSWORD}" | passwd --stdin root
echo "${ADMIN_PASSWORD}" | passwd --stdin admin


####
systemctl disable postfix.service
curl -sS https://gitee.com/quefei/quenong/raw/master/install.sh | bash
%end


####
%addon com_redhat_kdump --enable --reserve-mb='auto'
%end

%anaconda
pwpolicy root --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy luks --minlen=6 --minquality=50 --notstrict --nochanges --notempty
%end
